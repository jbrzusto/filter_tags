#include "Run_Foray.hpp"

#include <string.h>

Run_Foray::Run_Foray (Tag_Database * tags, std::istream *data) :
  tags(tags),
  data(data),
  line_no(0),
  run_finders()
{
  
};


void
Run_Foray::start() {

  // fields in a line
  double ts;
  int lid;
  char ant_label[MAX_ANT_CODE_SIZE+1];
  int ant_code;
  unsigned int dtaline; // line number in original .DTA file
  short sig;
  double freq;
  Nominal_Frequency_kHz nom_freq;

  // add a run finder for each nominal frequency
  Freq_Set nf = tags->get_nominal_freqs();

  for (Freq_Set::iterator ifs = nf.begin(); ifs != nf.end(); ++ifs) {
    Run_Finder * rf = run_finders[*ifs] = new Run_Finder(this, *ifs, "");
    Tag_Set * tgs = tags->get_tags_at_freq(*ifs);
    for (auto it = tgs->begin(); it != tgs->end(); ++it)
      rf->add_tag(*it);
  }

  // initialize each run_finder
  for (Freq_Set::iterator ifs = nf.begin(); ifs != nf.end(); ++ifs)
    run_finders[*ifs]->init();

  for (;;) {
    // read and parse a line from a .csv file generated by the readDTA.R() function

    char buf[MAX_LINE_SIZE + 1];
    if (! data->getline(buf, MAX_LINE_SIZE)) {
      if (data->eof())
        break;
      data->clear();
      continue;
    }

    if (!buf[0])
      continue;

    ++line_no;
    // lines are like this:
    // 1374672755.3166,118,1,123,123423,166.38"
    // i.e. TS,LotekID,Ant,Sig,DTALine,antFreq"

    if (6 != sscanf(buf, "%lf,%d,\"%[^\"]\",%hd,%u,%lf", &ts, &lid, ant_label, &sig, &dtaline, &freq)) {
      std::cerr << "Warning: malformed line in input\n  at line " << line_no << ":\n" << (string("") + buf) << std::endl;
      continue;
    }
    ant_code = Run_Foray::ant_codes.add(std::string(ant_label));
    nom_freq = Freq_Setting::get_closest_nominal_freq(freq);

    Hit h = Hit::make(ts, lid, ant_code, sig, dtaline, freq);
    run_finders[nom_freq]->process(h);
  }

  // dump any remaining candidates (FIXME: option this once we have resume capability)
  for (auto rfi = run_finders.begin(); rfi != run_finders.end(); ++rfi)
    (rfi->second)->end_processing();
};

Hashed_String_Vector Run_Foray::ant_codes = Hashed_String_Vector();
